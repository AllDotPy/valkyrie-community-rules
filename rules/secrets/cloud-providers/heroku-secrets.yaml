id: "heroku-secrets-001"
name: "Heroku Secrets Detection"
description: "Detects Heroku API keys, tokens, and credentials in source code"
category: "secrets"
severity: "critical"
author: "Valkyrie Community"
version: "1.0.0"
tags:
  - "heroku"
  - "paas"
  - "api-keys"
  - "secrets"
  - "cloud"
  - "deployment"
enabled: true

# Pattern definitions
patterns:
  - pattern: '[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{36}'
    name: "Heroku API Key pattern"
    entropy_threshold: 3.8
    keywords: ["heroku", "api", "key", "token", "bearer"]

  - pattern: 'heroku\.com'
    name: "Heroku domain with potential credentials"
    entropy_threshold: 0.0
    keywords: ["heroku", "git", "remote", "deploy"]

  - pattern: 'https://[^:]+:[^@]+@git\.heroku\.com/'
    name: "Heroku Git remote with embedded credentials"
    entropy_threshold: 0.0
    keywords: ["heroku", "git", "remote", "credentials"]

  - pattern: 'machine api\.heroku\.com'
    name: "Heroku netrc configuration"
    entropy_threshold: 0.0
    keywords: ["heroku", "netrc", "machine", "login", "password"]

  - pattern: 'HEROKU_API_KEY=[0-9a-fA-F\-]{36}'
    name: "Heroku API Key environment variable"
    entropy_threshold: 0.0
    keywords: ["heroku", "api", "key", "environment", "variable"]

  - pattern: 'DATABASE_URL=postgres://[^:]+:[^@]+@'
    name: "Heroku PostgreSQL database URL"
    entropy_threshold: 0.0
    keywords: ["database", "postgres", "heroku", "url", "credentials"]

  - pattern: 'redis://[^:]+:[^@]+@'
    name: "Heroku Redis database URL"
    entropy_threshold: 0.0
    keywords: ["redis", "heroku", "url", "credentials"]

# File type restrictions
file_extensions:
  - ".env"
  - ".yml"
  - ".yaml"
  - ".json"
  - ".js"
  - ".ts"
  - ".py"
  - ".rb"
  - ".sh"
  - ".bash"
  - ".zsh"
  - ".gitconfig"
  - ".netrc"
  - "_netrc"
  - ".txt"
  - ".config"

# Exclude patterns to reduce false positives
exclude_patterns:
  - "test.*"
  - "example.*"
  - ".*template.*"
  - ".*sample.*"
  - ".*mock.*"
  - "00000000-0000-0000-0000-000000000000"  # Empty UUID pattern
  - "https://user:password@git.heroku.com/"  # Example pattern

remediation: |
  Heroku credentials should never be hardcoded in source code.
  
  Recommended solutions:
  1. Use Heroku Config Vars for environment-specific configuration
  2. Use Heroku's built-in secret management through the dashboard or CLI
  3. Never commit .env files or netrc files containing credentials
  4. Use Heroku's preboot feature for credential rotation without downtime
  5. Implement proper .gitignore rules to prevent accidental commits
  6. Use Heroku's review apps for isolated testing environments
  7. Regularly rotate API keys and review access permissions

references:
  - "https://devcenter.heroku.com/articles/authentication"
  - "https://devcenter.heroku.com/articles/config-vars"
  - "https://devcenter.heroku.com/articles/heroku-cli-commands"
  - "https://devcenter.heroku.com/articles/security-best-practices"
  - "https://devcenter.heroku.com/articles/git"
  