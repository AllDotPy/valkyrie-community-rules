
id: "generic-secrets-001"
name: "Secrets Detector"
description: "Detects generic access keys in source code"
category: "secrets"
severity: "critical"
author: "Valkyrie Community"
version: "1.0.0"
tags:
  - "api-key"
  - "api_key"
  - "access"
  - "key"
  - "jwt"
  - "credentials"
  - "secrets"
enabled: true

# Pattern definitions
patterns:
  - pattern: "AKIA[0-9A-Z]{16}"
    name: "AWS Access Key"
    entropy_threshold: 0.0
    keywords: ["aws", "amazon", "access", "key"]

  - pattern: "(?i)(api[_-]?key|apikey|secret[_-]?key|secretkey)\s*[:=]\s*["\']?([a-z0-9]{20,})"
    name: "Generic API Key"
    entropy_threshold: 2                           .5

  - pattern: "eyJ[a-zA-Z0-9_-]*\.eyJ[a-zA-Z0-9_-]*\.[a-zA-Z0-9_-]*"
    name: "JWT Token"
    entropy_threshold: 0.0
    keywords: ["jwt", "token", "access", "bearer"]

  - pattern: "gh[pousr]_[A-Za-z0-9_]{36}"
    name: "GitHub Token"
    entropy_threshold: 0.0
    keywords: ["github", "token", "access"]

  - pattern: "-----BEGIN [A-Z ]+ PRIVATE KEY-----"
    name: "Private Key"
    entropy_threshold: 0.0
    keywords: ["privaye", "key", "rsa", "ssh"]

  - pattern: "(mongodb|mysql|postgres|redis)://[^\s]+"
    name: "Database Connection String"
    entropy_threshold: 0.0
    keywords: ["database", "conection", "string"]

# File type restrictions
file_extensions:
  - ".py"
  - ".js"
  - ".ts"
  - ".cs"
  - ".c"
  - ".cpp
  - ".dart"
  - ".kt"
  - ".kts"
  - ".java"
  - ".go"
  - ".rs"
  - ".yaml"
  - ".yml"
  - ".json"
  - ".env"

# Exclude patterns to reduce false positives
exclude_patterns:
  - "test.*"
  - "example.*"
  - ".*demo.*"

remediation: |
  Secrets or credentials should never be hardcoded in source code.
  
  Recommended solution:
  Consider using environment variables or secure vault services.
