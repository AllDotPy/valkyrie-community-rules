id: "digitalocean-secrets-001"
name: "DigitalOcean Secrets Detection"
description: "Detects DigitalOcean API tokens, SSH keys, and credentials in source code"
category: "secrets"
severity: "critical"
author: "Valkyrie Community"
version: "1.0.0"
tags:
  - "digitalocean"
  - "do"
  - "api-tokens"
  - "secrets"
  - "cloud"
  - "vps"
enabled: true

# Pattern definitions
patterns:
  - pattern: 'dop_v1_[a-f0-9]{64}'
    name: "DigitalOcean API v1 Token"
    entropy_threshold: 0.0
    keywords: ["digitalocean", "do", "api", "token", "dop_v1"]

  - pattern: 'dop_v2_[a-f0-9]{64}'
    name: "DigitalOcean API v2 Token"
    entropy_threshold: 0.0
    keywords: ["digitalocean", "do", "api", "token", "dop_v2"]

  - pattern: '[a-f0-9]{64}'
    name: "Generic 64-char hex token (DigitalOcean pattern)"
    entropy_threshold: 3.8
    keywords: ["digitalocean", "token", "secret", "api"]

  - pattern: '-----BEGIN (RSA|EC|DSA|OPENSSH) PRIVATE KEY-----'
    name: "SSH Private Key (DigitalOcean droplets)"
    entropy_threshold: 0.0
    keywords: ["ssh", "private", "key", "digitalocean", "droplet"]
    context_lines: 3

  - pattern: '([a-z0-9]+\\.)?digitaloceanspaces\\.com'
    name: "DigitalOcean Spaces URL with potential credentials"
    entropy_threshold: 0.0
    keywords: ["digitalocean", "spaces", "s3", "storage"]

  - pattern: '"accessKeyId": "[A-Z0-9]{20}"'
    name: "Spaces Access Key ID"
    entropy_threshold: 0.0
    keywords: ["accesskeyid", "spaces", "digitalocean", "s3"]

  - pattern: '"secretAccessKey": "[A-Za-z0-9/+]{40}"'
    name: "Spaces Secret Access Key"
    entropy_threshold: 4.0
    keywords: ["secretaccesskey", "spaces", "digitalocean", "s3"]

# File type restrictions
file_extensions:
  - ".yaml"
  - ".yml"
  - ".json"
  - ".tf"          # Terraform files
  - ".sh"          # Shell scripts
  - ".py"
  - ".js"
  - ".ts"
  - ".env"
  - ".config"
  - ".conf"
  - ".txt"
  - ".pem"
  - ".key"

# Exclude patterns to reduce false positives
exclude_patterns:
  - "test.*"
  - "example.*"
  - ".*template.*"
  - ".*sample.*"
  - ".*mock.*"
  - "dop_v1_example1234567890abcdef1234567890abcdef1234567890abcdef1234567890"
  - "dop_v2_example1234567890abcdef1234567890abcdef1234567890abcdef1234567890"

remediation: |
  DigitalOcean credentials should never be hardcoded in source code.
  
  Recommended solutions:
  1. Use DigitalOcean's built-in secrets management for App Platform
  2. Use environment variables for configuration
  3. Store SSH keys in DigitalOcean's SSH key management
  4. Use IAM-like permissions with limited-scope tokens
  5. Regularly rotate API tokens and access keys
  6. Use .gitignore to prevent accidental commits of credential files
  7. Consider using Doppler, Vault, or other secret managers for development

references:
  - "https://docs.digitalocean.com/reference/api/create-personal-access-token/"
  - "https://docs.digitalocean.com/products/spaces/how-to/manage-access/"
  - "https://docs.digitalocean.com/products/app-platform/how-to/use-environment-variables/"
  - "https://docs.digitalocean.com/products/databases/how-to/secure-connections/"
  - "https://docs.digitalocean.com/products/kubernetes/how-to/secure-cluster/"
